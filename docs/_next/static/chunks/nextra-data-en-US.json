{"/API":{"title":"API","data":{"":""}},"/":{"title":"Demo","data":{"":"","default#Default":"Default configuration without specifying any props.\n<VerificationInput />","numbers-only#Numbers only":"Accept only numbers and use numpad on mobile devices.\n<VerificationInput validChars=\"0-9\" inputProps={{ inputMode: \"numeric\" }} />","password-mode#Password mode":"Hide the input value. This will also set the input type as password.\n<VerificationInput passwordMode={true} />","custom-length#Custom length":"Configure the input to accept 5 digits.\n<VerificationInput length={5} />","custom-placeholder#Custom placeholder":"Use any character as placeholder (empty string for no placeholder).","custom-seperators#Custom seperators":"Use any character as seperator empty string for spacing only. Specify the indices\nwhere seperators should be placed.\n<VerificationInput placeholder=\"_\" />","autofill-otp-ios#Autofill OTP (iOS)":"Let iOS read OTP codes from text message notifications (see docs).\nIn order to test this, you need to send a text message containing e.g. Code:\n123456 to your phone.\n\n<VerificationInput inputProps={{ autoComplete: \"one-time-code\" }} />"}},"/migration/v3":{"title":"Migrating to Version 3","data":{"":"This guide is aimed at developers wanting to update from v2.x.x to v3.x.x.Check the following steps one by one and execute the ones that apply to your\nsituation.","new-prop-containerprops#New prop: containerProps":"Custom props are no longer forwarded to the container element. Use the new\nprop containerProps instead and specify the custom props in object literal\nform.\n// v2\n<VerificationInput\nid=\"input-container\"\n/>\n\n// v3\n<VerificationInput\ncontainerProps={{\nid: \"input-container\"\n}}\n/>","remove-prop-removedefaultstyles#Remove prop: removeDefaultStyles":"The removeDefaultStyles prop has been removed. Styles are now overridable by\ndefault. Thus this prop can be removed safely.\n// v2\n<VerificationInput\nremoveDefaultStyles\nclassNames={{\ncharacter: \"character\"\n}}\n/>\n\n// v3\n<VerificationInput\nclassNames={{\ncharacter: \"character\"\n}}\n/>"}},"/migration/v2":{"title":"Migrating to Version 2","data":{"":"This guide is aimed at developers wanting to update from v0.1.x to v2.x.x.Check the following steps one by one and execute the ones that apply to your\nsituation.","rename-prop-input#Rename prop: input":"The input prop has been renamed to inputProps in order to be more explicit\nabout the props being forwarded to the input element. Also, the onChange\ncallback is now available on the top level. This matches the interface of a\nregular input element more closely (there is also a new top-level prop\nvalue).\n// v0.1.x\n<VerificationInput\ninput={{\ntype: \"tel\",\nvalue={code}\nonChange={handleCodeChange}\n}}\n/>\n\n// v2\n<VerificationInput\ninputProps={{\ntype: \"tel\",\n}}\nvalue={code}\nonChange={handleCodeChange}\n/>","remove-props-container-inputfield-characters-character#Remove props: container, inputField, characters, character":"These props have been removed. Your custom CSS classes can be passed to the\nnew classNames prop. In order to simplify the component structure, the\ncharacters element has been removed, use container instead. For more\ndetails see Styling. Additional props can no longer be forwarded\nto these elements.\n// v0.1.x\n<VerificationInput\ncontainer={{\nclassName: 'container',\n}}\ncharacters={{\nclassName: 'characters',\n}}\ncharacter={{\nclassName: 'character',\n}}\n/>\n\n// v2\n<VerificationInput\nclassNames={{\ncontainer: \"container\",\ncharacter: \"character\",\n}}\n/>","remove-prop-getinputref#Remove prop: getInputRef":"This callback has been removed. The new way to receive the input ref is to use\nthe standard ref prop. The\nresult will be a ref to the actual (invisible) input element.\n// v0.1.x\n<VerificationInput\ngetInputRef={ref => {myRef = ref}}\n/>\n\n// v2\n<VerificationInput\nref={myRef}\n/>"}},"/migration/v4":{"title":"Migrating to Version 4","data":{"":"This guide is aimed at developers wanting to update from v3.x.x to v4.x.x.Check the following steps one by one and execute the ones that apply to your\nsituation.","removed-wrapper-element#Removed Wrapper Element":"The wrapper element with the class name .vi_wrapper was removed. It was inconvenient to style this element with frameworks like Tailwind, since it was not possible to set custom class names. Instead the .vi_wrapper class had to be overridden in a CSS file.If you currently rely on this class, this change might break your styling. Styles from the wrapper element should probably be moved to the container element in version 4.\n// v3\n<style>\n.vi_wrapper {\n// your custom styles\n}\n</style>\n\n<VerificationInput />\n\n// v4\n<VerificationInput classNames={{ container: \"custom-class-names\" }} />"}},"/styling":{"title":"Styling","data":{"":"","example#Example":".character {\nborder: none;\nfont-size: 20px;\nborder-radius: 8px;\n\n/* light theme */\ncolor: #272729;\nbackground-color: #f6f5fa;\nbox-shadow: 0 2px 0 #e4e2f5;\n\n/* dark theme */\ncolor: #fff;\nbackground-color: #222;\nbox-shadow: 0 2px 0 #444;\n}","with-cursor-caret#With Cursor (Caret)":".character--selected {\nposition: relative;\n}\n\n/* optionally hide placeholder (in case it overlaps the cursor) */\n.character--selected:not(.character--filled) {\ncolor: transparent;\n}\n\n.character--selected:not(.character--filled)::after {\ncontent: \"\";\nwidth: 1px;\nheight: 25px;\nbackground-color: #333;\ndisplay: block;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nanimation: blink 1s infinite step-end;\n}\n\n@keyframes blink {\n0% {\nopacity: 1;\n}\n50% {\nopacity: 0;\n}\n}"}}}